<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on toeb&#39;s Blog</title>
    <link>https://toeb.github.io/categories/c#/</link>
    <description>Recent content in C# on toeb&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Dec 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://toeb.github.io/categories/c#/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Fluent Way of Exception Handling</title>
      <link>https://toeb.github.io/post/csharpfluentexceptionhandling/</link>
      <pubDate>Mon, 09 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://toeb.github.io/post/csharpfluentexceptionhandling/</guid>
      <description>While doing some filesystem work I encountered alot of AccessViolationExceptions because a file is being opened to write multiple times. Even after closing the file explicitly a short timeframe exists in which the file could not be opened again. The simplest approach for me was to retry openening the file until it worked. To allow a more easy and more general way to handle exceptions I developed a small extensible try-repeat-framework which allows me to configure waiting and repeating strategies and also to only react to specific exceptions.</description>
    </item>
    
  </channel>
</rss>
