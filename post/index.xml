<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on toeb&#39;s Blog</title>
    <link>https://toeb.github.io/post/</link>
    <description>Recent content in Posts on toeb&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Jun 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://toeb.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>cmakepp: Expression Syntax</title>
      <link>https://toeb.github.io/post/cmakeppexpressionsyntax/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://toeb.github.io/post/cmakeppexpressionsyntax/</guid>
      <description>‚ÄúCMake‚Äôs syntax is not sexy.‚Äù Is a statement that probably everyone can understand. It does not allow the developer rudimentary constructs which almost all other languages have. But because CMake‚Äôs language is astonishingly flexible I was able to create a lexer and parser and interpreter for a custom 100 % compatible syntax which (once ‚ÄúJIT transpiled‚Äù) is also fast. I call it cmakepp expressions or expr for short. I want to emphasize that all of this is written in 100% compatible cmake code and you can use it without the need to preprocess any cmake files or adding any dependencies (except cmakepp).</description>
    </item>
    
    <item>
      <title>A Fluent Way of Exception Handling</title>
      <link>https://toeb.github.io/post/csharpfluentexceptionhandling/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/csharpfluentexceptionhandling/</guid>
      <description>A Fluent Way of Exception Handling by thetoeb ‚Ä¢ 2013/12/09 ‚Ä¢ 4 Comments
While doing some filesystem work I encountered alot of AccessViolationExceptions because a file is being opened to write multiple times. Even after closing the file explicitly a short timeframe exists in which the file could not be opened again. The simplest approach for me was to retry openening the file until it worked. To allow a more easy and more general way to handle exceptions I developed a small extensible try-repeat-framework which allows me to configure waiting and repeating strategies and also to only react to specific exceptions.</description>
    </item>
    
    <item>
      <title>A Quick Way of Parsing versioned Web Asset Files</title>
      <link>https://toeb.github.io/post/csharpparsingwebassetfiles/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/csharpparsingwebassetfiles/</guid>
      <description>A Quick Way of Parsing versioned Web Asset Files by thetoeb ‚Ä¢ 2013/12/04 ‚Ä¢ 0 Comments
To parse versioned web asset filenames ala jquery-1.4.min.js I wrote a simple class
///  /// simple class for describing a file library like /// jquery-1.4.min.js /// bootstrap.min.css /// libname-1.0.0.0.tag1.tag2.tag3.extension /// &amp;hellip; etc /// contains methods for parsing these kind of filenames ///  public class FileLib { ///  /// regular expression for parsing the filename ///  public static readonly string libRegex = @&amp;quot;((?</description>
    </item>
    
    <item>
      <title>Alternative `typedef` Syntax</title>
      <link>https://toeb.github.io/post/alternativetypedefsyntax/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/alternativetypedefsyntax/</guid>
      <description>An Alternative typedef Syntax using the C++ Preprocessor by thetoeb ‚Ä¢ 2014/10/13 ‚Ä¢ 3 Comments
Disclaimer: This post will be more interesting to you if you work with the preprocessor.
Here you can find a preprocessor only solution for changing the typedef syntax from typedef int number_type; to int typedef_as number_type; ‚Äì an alternative typedef Syntax.
If your wondering where this might be useful let me tell you why I needed it: I was working on a preprocessor macro which defines a property ‚Äì a field, a getter and a setter.</description>
    </item>
    
    <item>
      <title>An Implementation of the Dynamic Object in C&#43;&#43;</title>
      <link>https://toeb.github.io/post/cppdynamicobject/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/cppdynamicobject/</guid>
      <description>An Implementation of the Dynamic Object in C++ by thetoeb ‚Ä¢ 2014/10/08 ‚Ä¢ 2 Comments
You can find my implementation at https://github.com/toeb/cppdynamic it is licensed under the MIT license. I‚Äôd be happy for feedback and or optimizations :) Dynamic object are useful, especially in rapid prototyping, non-performance critical situations, and situations in which data/functions -bags are needed (non schema specific data). Also when serializing and deserializing dynamic objects can be a very valuable asset.</description>
    </item>
    
    <item>
      <title>CMake and the Filesystem</title>
      <link>https://toeb.github.io/post/cmakeppfilesystem/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/cmakeppfilesystem/</guid>
      <description>BUILD, CMAKE, PROGRAMMING CMake and the Filesystem by thetoeb ‚Ä¢ 2014/11/27 ‚Ä¢ 0 Comments
Filesystem I have always been a bit confused when working with cmake‚Äôs file functions and the logic behind paths (sometimes they are found sometimes they are not‚Ä¶) For ease of use I reimplemented a own path managing system which behaves very similar to powershell and bash (see ss64.com) it is based around a global path stack and path qualification.</description>
    </item>
    
    <item>
      <title>cmakepp: Reading and Writing JSON</title>
      <link>https://toeb.github.io/post/cmakereadingandwritingjson/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/cmakereadingandwritingjson/</guid>
      <description>Reading and Writing JSON with CMake by thetoeb ‚Ä¢ 2014/03/05 ‚Ä¢ 2 Comments
While working on a package manager for CMake I came across the problem of finding a suitable format for my package descriptor files. First I thought about and tried using plain old CMake file that simply sets variables and can be included to access its contents. It was very quick and easy to implement. Hierarchical data structures however where hard to implement and a none standard format makes it harder to exchange data with a webservice/other programs.</description>
    </item>
    
    <item>
      <title>cmakepp: reflecting and manipulating CMakeLists</title>
      <link>https://toeb.github.io/post/cmakeppreflectingandmanipulatingcmakelists/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/cmakeppreflectingandmanipulatingcmakelists/</guid>
      <description>cmakepp: reflecting and manipulating CMakeLists by thetoeb ‚Ä¢ 2015/03/19 ‚Ä¢ 2 Comments
The basic CMakeLists.txt files for cmake based projects are usually very simple. Their manipulation lends itself to be automated and for this purpose I developed a parser for cmake script which allows you to manipulate it programatically from within cmake itself. On top of the cmake script parser I generated utility functions which allow you to manipulate CMakeLists.txt files while still allowing you to manually working on them.</description>
    </item>
    
    <item>
      <title>cmakepp: Template Generation in CMake</title>
      <link>https://toeb.github.io/post/cmakepptemplategeneration/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/cmakepptemplategeneration/</guid>
      <description>cmakepp: Template Generation in CMake by thetoeb ‚Ä¢ 2015/02/11 ‚Ä¢ 0 Comments
Find it at http://github.com/toeb/cmakepp
Download cmakepp standalone file here
As with all my work I appreciate all feedback given and am particularly happy about virtual internet points üôÇ
To the Post: While working on the documentation of cmakepp I grew wary of always doubling the documentation ‚Äì one in the source code and a mirror in the README.md. Also I was frustrated when I refactored and renamed functions or changed signatures which is not uncommon ‚Äì especially when working on a new feature.</description>
    </item>
    
    <item>
      <title>CTest Integration for VisualStudio</title>
      <link>https://toeb.github.io/post/ctesttestadapter/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/ctesttestadapter/</guid>
      <description>CTest Integration for VisualStudio by thetoeb ‚Ä¢ 2014/11/22 ‚Ä¢ 0 Comments
Motivation I have long searched for an extension in VisualStudio which allows you to control kitware‚Äôs CTests via the Test Explorer. Since no such thing existed I have developed a workable proof of concept myself :D.
This software is currently not in its finished state, It still needs polishing because it can be slow and is not well tested. However it works so if you want to give it a ride ‚Äì go ahead.</description>
    </item>
    
    <item>
      <title>dynamically calling ‚Äúany‚Äù thing in C&#43;&#43;</title>
      <link>https://toeb.github.io/post/cppdynamicallycallanything/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/cppdynamicallycallanything/</guid>
      <description>dynamically calling ‚Äúany‚Äù thing in C++ by thetoeb ‚Ä¢ 2014/07/15 ‚Ä¢ 0 Comments
Extending upon boost‚Äôs any class which stores a type and a void ptr to any type of value, I created a callable version were you can assign any function, lambda, memberfunction etc. to the any and call it dynamically. This is a basic and important step for runtime reflection which I‚Äôm currently working on. Tell me if you like what I did and if you have any improvements.</description>
    </item>
    
    <item>
      <title>How to enable Typescript Compilation for a VS2013 Class Library Project</title>
      <link>https://toeb.github.io/post/enabletypescriptcompilationforvs2013classlibrary/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/enabletypescriptcompilationforvs2013classlibrary/</guid>
      <description>How to enable Typescript Compilation for a VS2013 Class Library Project by thetoeb ‚Ä¢ 2013/12/18 ‚Ä¢ 2 Comments
I know its a little obscure, but I recently needed to find out how to enable Typescript in a Visual Studio 2013 Class Library project, because per default this is not enabled. (probably a bug)
Vanilla way of enabling TypeScript:
Create a ‚ÄúClass Library‚Äù project Add a Typescript file (.ts) This is were the bug occurs, normally the TypeScript file should compile on save.</description>
    </item>
    
    <item>
      <title>is_callable type trait</title>
      <link>https://toeb.github.io/post/cppiscallabletypetrait/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/cppiscallabletypetrait/</guid>
      <description>is_callable type trait by thetoeb ‚Ä¢ 2014/07/12 ‚Ä¢ 0 Comments
I‚Äôve developed a type_trait for checking if a type is callable, ie has defined a single operator(). Also on ideone
Tell me if you like it or if you know of a better version :D /// function traits for member functions // gives you the class_type, return_type and arguments tuple for any member function (const and not const) templatestruct func_traits{ static const bool is_const_call = false; typedef void class_type; typedef void return_type; typedef void args_tuple; }; // specialization for non const call member functions template &amp;lt; typename TClass ,typename TRet, typename &amp;hellip; TArgs&amp;gt; struct func_traits&amp;lt;TRet(TClass::)(TArgs&amp;hellip;)&amp;gt; { static const bool is_const_call = false; typedef TClass class_type; typedef TRet return_type; typedef std::tuple&amp;lt;TArgs&amp;hellip;&amp;gt; args_tuple; }; // specialization for const call member function template &amp;lt; typename TClass, typename TRet, typename &amp;hellip; TArgs&amp;gt; struct func_traits&amp;lt;TRet(TClass::)(TArgs&amp;hellip;)const&amp;gt; { static const bool is_const_call = true; typedef TClass class_type; typedef TRet return_type; typedef std::tuple&amp;lt;TArgs&amp;hellip;&amp;gt; args_tuple; };</description>
    </item>
    
    <item>
      <title>Modern CMake Slides</title>
      <link>https://toeb.github.io/post/cmakeppheterogenouspackagesearchandretrieval/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/cmakeppheterogenouspackagesearchandretrieval/</guid>
      <description>I‚Äôve held a Presentation about ‚Äúmodern CMake‚Äù at the C++ Meetup in Wiesbaden a week ago and wanted to share the slides with the Internet. I try to highlight the parts of a CMake project which I consider as modern (I guess there is room for interpretation here)
I give a small introduction to CMake command line, script mode and then mostly about targets, scoping etc. Of course you cannot hear my voice but maybe the slides themselves can give you some insight.</description>
    </item>
    
    <item>
      <title>Modern CMake Slides</title>
      <link>https://toeb.github.io/post/enablingmvc5intellisensinclasslibraryproject/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/enablingmvc5intellisensinclasslibraryproject/</guid>
      <description>Enabling MVC5 intellisense in a ClassLibrary Project by thetoeb ‚Ä¢ 2014/01/05 ‚Ä¢ 3 Comments
I‚Äôve been searching and searching the internet for someone, somewhere who might know how to enable correct IntelliSense for cshtml (MVC 5.0) in VS2013 when developing in a ClassLibrary type project.
This is the problem I was encountering:
Missing Intellisense
It‚Äôs all thanks to Mohammad Chehab, who was also stumped for a while (probably not as long as me), that I was able to find the solution.</description>
    </item>
    
    <item>
      <title>Modern CMake Slides</title>
      <link>https://toeb.github.io/post/moderncmakeslides/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/moderncmakeslides/</guid>
      <description>I‚Äôve held a Presentation about ‚Äúmodern CMake‚Äù at the C++ Meetup in Wiesbaden a week ago and wanted to share the slides with the Internet. I try to highlight the parts of a CMake project which I consider as modern (I guess there is room for interpretation here)
I give a small introduction to CMake command line, script mode and then mostly about targets, scoping etc. Of course you cannot hear my voice but maybe the slides themselves can give you some insight.</description>
    </item>
    
    <item>
      <title>Normalized Attribute Names in Angular</title>
      <link>https://toeb.github.io/post/normalizedattributenamesinangular/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/normalizedattributenamesinangular/</guid>
      <description>FRONTEND Normalized Attribute Names in Angular by thetoeb ‚Ä¢ 2014/01/14 ‚Ä¢ 1 Comment
I have been doing some hard directive/ html markup work and I came across a problem where I needed the normalized html tag attribute names. (I was trying to create a html element but needed access to the normalized names without turning it into a directive)
Angular.js normalizes names like ‚Äútest-name‚Äù and ‚Äúdata-test-name‚Äù to ‚ÄútestName‚Äù. So I went ahead and extracted and wrapped the functions needed into the following function:</description>
    </item>
    
    <item>
      <title>Object Oriented CMake: Next Iteration</title>
      <link>https://toeb.github.io/post/objectorientedcmakenextiteration/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/objectorientedcmakenextiteration/</guid>
      <description>Object Oriented CMake: Next Iteration by thetoeb ‚Ä¢ 2014/02/25 ‚Ä¢ 3 Comments
I worked on my object oriented extensions for CMake and am on a much higher level of usability than before!
try it at https://github.com/toeb/oo-cmake
and as always: Feedback is most welcome
See the following object tutorial for ease of use: (for the current version look at the readme.md on github)
using objects ### ============= # oo-cmake is very similar to javascript # I actually used the javascript reference to figure out how things could be done :) # oo-cmake is a pure object oriented language like javascript (only objects no types per se) # oo-cmake is currently file based and relies heavily on dynamic functions to be upfron about it: # oo-cmake is very slow (depending on what your doing) ## creating a object ## ================= obj_new(myobject) # ${myobject} now is a reference to an object obj_exists(${myobject} _exists) assert(_exists) ## deleting a object ## ================= # oo-cmake does not contains automatic memory management # you can however remove all objects by calling obj_cleanup # (a very crude way of garbage collection) I would suggest calling it at the end of cmake.</description>
    </item>
    
    <item>
      <title>Objects and Maps in CMake</title>
      <link>https://toeb.github.io/post/cmakeppobjectsandmaps/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/cmakeppobjectsandmaps/</guid>
      <description>Objects and Maps in CMake by thetoeb ‚Ä¢ 2014/02/16 ‚Ä¢ 7 Comments
Get it at https://github.com/toeb/oo-cmake and tell me if you like it
For more complex build system features oo programming would be a major boon. So I took it upon myself to create a usable and tested oo-extension for cmake (in pure CMake) so I could continue developing and extending my plattform independent tooling support (cutil) .
It‚Äôs too bad that Kitware decided to use their own language (with very little high level language features) for their build system product because CMakes project generation capabilties are unparalleled .</description>
    </item>
    
    <item>
      <title>Parallel Processes in CMake</title>
      <link>https://toeb.github.io/post/cmakeppparallelprocesses/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/cmakeppparallelprocesses/</guid>
      <description>Parallel Processes in CMake by thetoeb ‚Ä¢ 2014/12/16 ‚Ä¢ 0 Comments
If you need to check out multiple large repositories or build and install large separate projects you might want to use parallel processes in CMake. Dividing your tasks to use multiple CMake and or other processes can speed up your build and configuration steps immensely.
Since all cmake host OSs support multitasking from the command line it is possible to use cmake to contol them in turn.</description>
    </item>
    
    <item>
      <title>Renameable Namespaces using the Preprocessor</title>
      <link>https://toeb.github.io/post/cpprenameablenamespaces/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/cpprenameablenamespaces/</guid>
      <description>Renameable Namespaces using the Preprocessor by thetoeb ‚Ä¢ 2014/10/14 ‚Ä¢ 0 Comments
Motivation If you are starting to work on a library and do not know exactly how your namespaces are going end up these macro helper are for you. I have written helpers that simplify using namespaces and lets you build up your namespaces with preprocessor defines. This allows you to quickly rename your namespaces which in turn makes it alot more flexible.</description>
    </item>
    
    <item>
      <title>Useful extensions for CMake</title>
      <link>https://toeb.github.io/post/usefulextensionsforcmake/</link>
      <pubDate>Tue, 30 Aug 2016 23:24:46 +0200</pubDate>
      
      <guid>https://toeb.github.io/post/usefulextensionsforcmake/</guid>
      <description>Useful extensions for CMake by thetoeb ‚Ä¢ 2014/09/05 ‚Ä¢ 0 Comments
When using cmake for more than just simple projects it is lacking in various aspects. Some list and string functions are missing. Interaction with command line applications and the file system are harder than they need to be. Especially however using structured data (maps and objects) and more complex funtional programming is not easy at all. So a couple of months ago I started implementing some extensions for object oriented programming 1 2.</description>
    </item>
    
  </channel>
</rss>
